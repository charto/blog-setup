worker_processes auto;

events {
	worker_connections 512;
	multi_accept off; 
}

http {
	server_tokens off;

	sendfile on;
	tcp_nodelay on;   
	tcp_nopush on;

	gzip on;
	gzip_buffers 16 8k;
	gzip_comp_level 6;
	gzip_min_length 1024;
	gzip_proxied any; 
	gzip_vary on;

	upstream blog-ghost {
		least_conn;
		keepalive 8;

		server blog-ghost:2368;
	}

	upstream blog-nodebb {
		least_conn;
		keepalive 8;

		server blog-nodebb:4567;
	}

	server {
		listen 80 default_server;
		server_name localhost;
		return 301 https://$server_name$request_uri;
	}

	server {
		listen 443 default_server ssl;

		ssl_certificate ssl/cert.pem;
		ssl_certificate_key ssl/key.pem;

		ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers HIGH:!aNULL:!MD5:!RC4;
		ssl_prefer_server_ciphers on;

		server_name localhost;

		location ~ ^/(blog|forum)($|[?]) {
			absolute_redirect off;

			rewrite ^/(blog|forum)(.*)$ /$1/$2 permanent;
		}

		location ~ ^/blog/ {
			proxy_redirect off;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			proxy_set_header Host $http_host;

			# Clear any "Connection: close" from the client, to keep our connection alive.
			proxy_set_header Connection "";
			# Decrease latency by keeping connection open.
			proxy_http_version 1.1;

			proxy_hide_header X-Powered-By;

			proxy_pass http://blog-ghost;
		}

		location ~ ^/forum/ {
			add_header Referrer-Policy origin-when-cross-origin;

			proxy_redirect off;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";

			proxy_set_header Host $http_host;

			# Clear any "Connection: close" from the client, to keep our connection alive.
			proxy_set_header Connection "";
			# Decrease latency by keeping connection open.
			proxy_http_version 1.1;

			proxy_hide_header X-Powered-By;
			proxy_pass_header X-XSRF-TOKEN;

			proxy_pass http://blog-nodebb;
		}

		location / {
			# add_header 'Access-Control-Allow-Origin' "$http_origin";
			# add_header 'Vary' "Origin";

			alias /opt/blog/static/;
			try_files $uri $uri/ /index.html;
			autoindex off;

			include /etc/nginx/mime.types;
		}
	}
}
